---
title: Inline CSS web fonts
date: 2013-08-28 18:34 CEST
tags: performance, webfonts
published: true
---

If you serve web fonts via URL, the browser makes a separate request for every web font.

Fonts included from stylesheets in head cause one extra request that only starts when the containing CSS is retrieved and processed.
Referencing fonts from body causes a flash of missing text or a font change flash, and requires JS work around for most browsers.

However, you can avoid extra requests *and* rendering issues if you inline the fonts as data-uris.

READMORE

Inline web fonts with this script:

<% code 'bash' do %>
# download inliner and mark it as executable
curl https://gist.github.com/glebm/6360088/raw > inline-css-font.rb; chmod +x inline-css-font.rb
# provide URL or path to convert
./inline-css-font.rb 'https://fonts.googleapis.com/css?family=Arimo:400'
<% end %>

[The script][inline-css-font.rb] outputs CSS with all the `url` values inlined in data-uris, `woff` format.
You can now deliver the fonts and CSS together in 1 request and the rendering is perfect, 
no more <a href="http://en.wikipedia.org/wiki/Flash_of_unstyled_content"><def title="Flash of Unstyled Content">FOUC</def></a> or font change.

### There be dragons

* base64 encoding causes a +33% file size increase, but gzip mitigates this
* when there are more fonts files at some point it is faster to download them in parallel. This depends on the font sizes and latency / bandwidth of the audience.
* public CDN files may already be in browser cache (e.g. the most popular Google Web Fonts)
* the most common format woff is [supported][caniuse-woff] everywhere but IE 8 and stock Anroid Browser,
  you'd have to serve other formats to these browsers

Most individual font sizes are in 10 - 20 KB range; if you only use a few font files this could easily cut down initial load times by 5-20%.
Measure with any client-side monitoring tool to find out (it is best if your tool shows the distribution, and not just the average).

Alternatively, you could try using [Google Page Speed Module][mod-pagespeed], which may intellegently apply this and other optimizations, but has it's own drawbacks.

[inline-css-font.rb]: https://gist.github.com/glebm/6360088
[caniuse-woff]: http://caniuse.com/woff
[mod-pagespeed]: https://developers.google.com/speed/pagespeed/module
